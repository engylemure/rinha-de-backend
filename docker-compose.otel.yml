version: '3.5'
services:
  api1: &api
    # API - Inst√¢ncia 01
    #    image: api
    build: 
      dockerfile: ./docker/api.Dockerfile
      context: ./
    hostname: api01
    depends_on:
      - intermediary_api
    expose:
      - "80"
    env_file: ./env
    environment:
      - RUST_ENV=prod
      - RUST_LOG=info
      - RINHA_URL=http://intermediary_api:50051
      - TARGET_NAME=rinha
      - LOGGER_OUTPUT=otel
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel_collector:4317
      - OTEL_SERVICE_NAME=rinha-de-backend-api
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '0.4GB'
  api2:
    # API - Instancia 02
    <<: *api
    hostname: api02
  nginx:
    # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.15'
          memory: '0.4GB'
  intermediary_api:
    build: 
      dockerfile: ./docker/intermediary_api.Dockerfile
      context: ./
    hostname: intermediary_api
    ports:
      - 50051:50051
    expose:
      - "50051"
    depends_on:
      - db
    env_file: ./env
    environment:
      - RUST_ENV=prod
      - RUST_LOG=info
      - TARGET_NAME=intermediary_api
      - MAX_BATCH_INSERT_SIZE=1024
      - BATCH_INSERT_INTERVAL_SECS=1
      - LOGGER_OUTPUT=otel
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel_collector:4317
      - OTEL_SERVICE_NAME=rinha-de-backend-intermediary_api
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'
  db:
    # Banco de dados
    image: postgres:15.4-alpine3.18
    hostname: db
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_USER: root
      POSTGRES_DB: rinha_de_backend
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./postgresql.conf:/docker-entrypoint-initdb.d/postgresql.conf
    command: postgres -c config_file=/docker-entrypoint-initdb.d/postgresql.conf
    ports:
      - 5432:5432
    deploy:
      resources:
        limits:
          cpus: '0.8'
          memory: '1.0GB'
  jaeger:
    image: jaegertracing/all-in-one:latest
    hostname: jaeger
    depends_on:
      - prometheus
    volumes:
      - "./jaeger-ui.json:/etc/jaeger/jaeger-ui.json"
    command: --query.ui-config /etc/jaeger/jaeger-ui.json
    environment:
      - METRICS_STORAGE_TYPE=prometheus
      - PROMETHEUS_SERVER_URL=http://prometheus:9090
      - PROMETHEUS_QUERY_SUPPORT_SPANMETRICS_CONNECTOR=true
      - LOG_LEVEL=debug
    ports:
      - 16686:16686
  prometheus:
    hostname: prometheus
    image: prom/prometheus:latest
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
  otel_collector:
    hostname: otel_collector
    image: otel/opentelemetry-collector-contrib:latest
    volumes:
      - ./otel-collector-config-connector.yml:/etc/otelcol/otel-collector-config.yml
    command: --config /etc/otelcol/otel-collector-config.yml
    depends_on:
      - jaeger
  c_advisor:
    image: gcr.io/cadvisor/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    privileged: true
    ports:
      - 8080:8080
networks:
  default:
    driver: bridge
    name: rinha
